TestCase subclass: #MicroTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Micros-Test'!!MicroTest commentStamp: '<historical>' prior: 0!!!MicroTest methodsFor: 'as yet unclassified' stamp: 'LucasG 9/3/2014 17:16'!testUnApuradoPuedeSubirSiempreAUnMicro	| micro nico |	micro := Micro new.	micro initializeParados: 4 sentados: 5 volumen: 12. 	nico := Apurado new.		self assert: (micro puedeSubirA: nico).! !!MicroTest methodsFor: 'as yet unclassified' stamp: 'LucasG 9/3/2014 17:36'!testCuandoAUnClautrofobicoLeDigoQueSeSubaYNoPuedeDebeEstallar	| micro nico |	micro := Micro new.	micro initializeParados: 4 sentados: 5 volumen: 12. 	nico := Claustrofobico new.		self should: [ micro subiA: nico ] raise: Error.	self assert: micro pasajeros size equals: 0.! !!MicroTest methodsFor: 'as yet unclassified' stamp: 'LucasG 9/3/2014 17:19'!testUnClaustrofobicoSubeAUnMicro	| micro nico |	micro := Micro new.	micro initializeParados: 4 sentados: 5 volumen: 126. 	nico := Claustrofobico new.		self assert: (micro puedeSubirA: nico).! !!MicroTest methodsFor: 'as yet unclassified' stamp: 'LucasG 9/3/2014 17:21'!testUnClaustrofobicoNoSubeAUnMicroSiElVolumenEsPoco	| micro nico |	micro := Micro new.	micro initializeParados: 4 sentados: 5 volumen: 26. 	nico := Claustrofobico new.		self deny: (micro puedeSubirA: nico).! !